var store = [{
        "title": "RC Chapter 2. 동사의 형태와 종류",
        "excerpt":"동사의 형태와 종류   be 동사                  be       설명       예제                       am       주어가I, 시제가 현재       I am a student.                 is       주어가 3인칭 단수, 시제가 현재       A microphone is on the shelf.                 are       주어가 복수, 시제가 현재       They are a valuable asset to tour firm.                 was       주어가 단수, 시제가 현재       The stockholder’s opposition was strong.                 were       주어가 복수, 시제가 과거       Employees were reluctant to attend the workshop.           조동사+동사원형                                                          will       can       may                 should       must       have to                 had to       had better       used to                 does not       do not       did not           현재시제   현재 시제에는 두가지 용법이 존재한다.      습관   일반적인 사실   단수 주어 + 동사 s/es   복수 주어 + 동사원형   분사구문           현재분사 ving            과거분사 p.p       S   be   ving/p.p   하지만 p.p는 have/has p.p 현재완료 구문도 존재한다.  ","categories": ["c"],
        "tags": ["c","study"],
        "url": "/c/rc2/",
        "teaser": null
      },{
        "title": "Github Pages에 개인 도메인 등록하기",
        "excerpt":"개인 도메인 구매하기   Github Pages 블로그에 개인 도메인(example.com..,)을 연결하기 위해서는 먼저 개인 도메인이 있어야 합니다. 개인 도메인을 구매하는 방법은 여러가지가 있겠지만 보통은 도메인 등록업체를 통해 구매하는 방법이 있습니다.   국내 도메인 등록업체로는 가비아, 카페24, 호스팅케이알 등이 있습니다. 전 Google Domains 를 이용해 구매하여 사용중입니다. 개인 도메인 구매에 관한 자세한 내용은 따로 글을 쓰도록 하겠습니다.   구매한 개인 도메인 연결하기   도메인 등록업체를 통해 도메인을 구매하게 되면, 보통은 도메인 등록업체에서 자체 네임서버를 제공하여 DNS 서비스를 이용합니다. Cloudflare나 DNSEver와 같은 네임서버를 이용할 수도 있습니다. 이것을 왜 얘기하냐면 개인 도메인을 Github Pages에 연결하기 위해서는 이런 DNS 연결이 필요하기 때문입니다.   전 Google Domains 에서 구매하였으므로 Google Domains 의 도메인 설정화면에서 설명하겠습니다.   1. 도메인 설정화면      Google Domains 설정화면으로 이동하면 이렇게 뜹니다. 왼쪽의 메뉴에서 DNS로 이동합니다. 다른 도메인 등록업체에서도 대부분 이렇게 도메인 관리 페이지가 있습니다. 해당 페이지에서 DNS 서비스 메뉴로 이동하면 됩니다.   2. 도메인 DNS 설정      DNS 메뉴로 이동하면 이렇게 현재 사용하고 있는 네임서버가 뜹니다. 전 구글에서 제공하는 기본 네임서버를 이용하니 넘어가도록 하겠습니다.   3. 도메인 DNS 연결      스크롤을 내리면 이렇게 DNS 레코드를 설정할 수 있습니다. 검색 엔진 설정이라던지 이메일 사용시 MX 연결 등을 위 DNS 레코드 설정에서 할 수 있으니 알아두면 좋습니다. Github Pages 로 연결하는 설정은 아래와 같이 해주면 됩니다.                  이름(서브 도메인)(Host)       유형(A, MX ..)(Type)       데이터(IPv4 ..)(Value)       TTL(Time to Live)                       @       A       185.199.109.153       Automatic (1h)                 www       CNAME       USERNAME.github.io       Automatic (1h)           위에서 USERNAME 의 경우 자신이 GitHub Pages 를 개설할때 만든 Repository 이름을 적어주면 됩니다.   설정을 다 했다면 Github 으로 이동합니다.   4. Github   Github 으로 이동했다면 자신의 GitHub Pages Repository 로 이동하여 상단의 Settings 를 클릭합니다.      Settings 화면에서 좌측 메뉴 하단의 Pages 로 이동하게 되면 위와 같은 화면이 뜹니다. 전 현재 개인 도메인을 연결한 상태라 여러분들은 다른 화면이 뜰수도 있습니다. 밑의 Custom domains 란에 자신이 구입한 개인 도메인을 입력한 후 Save 버튼을 눌러주면 됩니다. DNS 연결이 제대로 되었다면 큰 문제 없이 설정이 완료될겁니다.   도메인 연결이 되었다면 잠시 시간이 지난 후 밑의 Enforce HTTPS 에 체크해줍니다. Https 를 사용하는 옵션입니다. 보통 도메인 연결 직후엔 되지 않으나 3~4분 후엔 활성화가 되므로 기다렸다가 체크해주면 됩니다.   페이지 접속하기   연결엔 잠시 시간이 걸릴 수 있으니 설정 직후 개인 도메인으로 접속하면 페이지가 나타나지 않을 수도 있습니다. 조금만 기다리면 정상적으로 페이지가 표시될 겁니다. 주의해야 할 점은 도메인 기간이 만료되면 페이지 접속이 되지 않을 수 있으니 도메인을 미리 연장하거나 만료 이후 위의 GitHub Pages 설정 화면에서 설정한 Custom Domains 를 Remove 해주어야 합니다. 이러면 개인 도메인으론 접속할 수 없고, 처음 제공된 USERNAME.github.io 링크로 접속해야 합니다.   GitHub Pages 에서 제공하는 github.io 도메인도 꽤 좋은 도메인이고, 개인 도메인 구매시엔 보통 10$ 내외의 적지 않은 비용이 필요하니 딱히 개인 도메인이 있거나, 필요한 경우가 아니라면 굳이 개인 도메인을 사용할 필요가 없습니다.   그래도 개인 도메인을 사용하는것이 유용할 때도 많고, 개인 도메인을 소유하고 있다면 메일 주소로도 사용이 가능하니 개발자라면 하나정도 가지고 있는것도 좋다고 생각합니다.  ","categories": ["blog"],
        "tags": ["blog","study"],
        "url": "/blog/blog1/",
        "teaser": null
      },{
        "title": "Github Test",
        "excerpt":"형용사 문제유형   토익에서 형용사의 문제유형은 다음과 같다      품사   콜로케이션 (해석)   형용사+전치사   비슷한 형태의 형용사   품사   Under more ——– circumstances, the board of trustees would have approved the budget increase, but this year it was not possible.   (A) favorable\t\t\t(B) favorably\t\t\t(C) favor\t\t\t(D) in favor   Even though Smithon Electronics’ second quarter was not ——–, the company plans to invest large sums on research.   (A) profitable\t\t\t(B) profiting\t\t\t(C) profitability\t\t\t(D) profitably   콜로케이션 (해석)   The Southwell guide discusses the most ——– ways to train yourself to be a great salesperson.   (A) effective\t\t\t(B) reluctant\t\t\t(C) concerned\t\t\t(D) contained   비슷한 형태의 형용사   To help the sales representatives advance their ——– speaking skills, Mr. Cho will provide a training workshop on Thursday.   (A) persuasive\t\t\t(B) persuades\t\t\t(C) persuadable\t\t\t(D) persuasively   (A) persuasive 는 설득력 있는 이라는 뜻의 형용사이다.   (B) persuades 는 설득하다 라는 뜻의 동사의 3인칭 단수형이다.   (C) persuadable 은 설득할 수 있는 이라는 뜻의 형용사이다.   (D) persuasively 는 설득력 있게 라는 뜻의 부사이다.   위 예제를 보면 알 수 있듯이 persuade 의 활용형은 굉장히 많다. 위 예제에서만 두개의 형용사가 있으며, 보기의 형용사 외에도 persuasible 설득될 수 있는 라는 뜻의 수동태형 형용사도 존재한다.   이처럼 비슷해 보이지만 뜻이 다른 형용사들이 영어에는 굉장히 많으므로, 이를 암기해야 이런 함정문제에서 정답을 찾을 수 있다. 대표적인 비슷한 형태의 형용사는 다음과 같다.                  단어       뜻                       comparable to       ~에 필적하는                 compatible with       ~와 호환 가능한                 complimentary       무료의, 칭찬하는                 complementary       보완적인                 comprehensible       이해할 수 있는                 comprehensive       포괄적인                 confident       확신하는                 confidential       기밀의, 비밀의                 economic       경제의                 economical       경제적인, 절약하는                 informed       박식한, 현명한                 informative       유익한                 prospective       유망한, 잠재적인                 prosperous       번영하는                 reliant       의존적인                 reliable       신뢰할 만한                 responsible       책임이 있는                 responsive       민감하게 반응하는           필수 형용사 자리 - 2형식, 5형식의 보어   2형식   The receptionist is very kind.   The report seems useful.   The prices are reasonable.   5형식   I consider prices of items resonable.   The CFO found the contract succesful.   수식어 형용사 (거품)   Green kitchen offers fresh dishes.   Mr. Kim owns a big supermarket.   전명구 (형용사/부사)   Items on the shelf need to be changed.   뒤에서 수식하는 형용사 (두 단어 이상의 형용사)   We need an item attractive to customers.   You need a permit written by the supervisor.   부사의 위치   부사, S V   Occasionally, we fail to perform some tasks.   조동사 부사 동사원형   Our department can soon meet the sales target.   S 부사 V   We recently expanded into the Asia market.   be 부사 S.C   She was slightly surprised at the news.  ","categories": ["data"],
        "tags": ["data","study"],
        "url": "/data/rc3/",
        "teaser": null
      },{
        "title": "따라하며 배우는 C언어 1",
        "excerpt":"컴퓨터는 왜 이진법(Binary numerical system) 을 사용할까   이진법이란 0과 1의 두 숫자를 사용하여 표현하는 방법이다. 많은 트랜지스터들이 스위치 형식으로 복잡한 CPU를 작동시킨다.     앨런 튜링   튜링 머신을 개발한 사람   폰 노이만   원자폭탄을 개발한 사람     내장형 프로그램 방식의 컴퓨터 (Stored-program computer)   현대적 컴퓨터의 구조를 정립한 구조를 폰 노이만 구조라고 부른다. 입력 &gt; CPU/메모리 처리 &gt; 출력   폰 노이만 구조에서 개선되어 현대적 컴퓨터의 구조가 만들어졌다. Single System Compute Bus     컴퓨터 메모리의 기본 구조   연산은 CPU에서 하고 정보를 저장하는 것은 메모리에서 한다.   1차적으로 메모리에 중요한 내용들이 저장이 되어 있다가, CPU가 필요한 것들을 하나하나 가져다가 연산을 하고 연산 결과를 메모리에 돌려주고, 메모리에 저장을 한다.   CPU &gt; 캐시 메모리 &gt; 주기억장치 - 메모리 (캐시 메모리란, 자주 쓰는 정보를 저장하여 속도 향상)     순차 접근 (Sequential Access)   예전의 자기(Magnetic) 테이프 같은 곳에서 쓰였다. 메모리의 저장된 데이터를 순차적으로 하나하나 다 찾는 방식 순차적으로 모두 찾아야 해서 속도가 매우 느리며, 현대 컴퓨터에선 사용하지 않는 방식   임의 접근 (Random Access)   현대 컴퓨터에서 사용하는 방식, RAM(Random Access Memory) 순차적으로 찾을 필요 없이 바로바로 접근이 가능한 방식     CPU의 기본 구조   프로그램이 시작되는 과정   CPU &lt;&gt; 주기억장치-메모리 &lt; 보조기억장치(HDD,SSD)   언어   고수준 프로그래밍 언어 (High level programming language)   A = 3 B = 4 C = A + B   어셈블리 언어 (Assembly language)   니모닉 (Mnemonic) LOAD\t\t\t[10] ADD\t\t\t  [11] STORE\t\t  [12]   기계어 (Machine code)   100110\t0000001010 110011\t0000001011 111010\t0000001100     CPU 명령어 집합 (Instruction Set)      ADD - 숫자 두 개를 더한다   COMPARE - 숫자들끼리 비교한다   IN - 키보드 같은 입력장치로부터 정보를 입력받는다   JUMP - 지정된 메모리 주소로 점프한다   JUMP IF - 조건에 따라 점프한다   LOAD - 메모리에서 CPU로 정보를 가져온다   OUT - 출력 장치로 정보를 출력한다   STORE - 메모리에 정보를 저장한다     CPU의 구성 요소들   제어 장치 (Control Unit) &lt;&gt; 여러가지 레지스터들 (Registers) 산술 논리 장치 (Arithmetic Logic Unit) &lt;&gt; 여러가지 레지스터들 (Registers)                  레지스터 종류       기능                       주소 레지스터       읽거나 쓸 메모리 주소 저장                 프로그램 카운터       다음 명령어의 메모리 주소 저장                 데이터 레지스터       메모리에서 읽어온 데이터 저장                 명령어 레지스터       메모리에서 읽어온 명령어 저장                 어큐뮬레이터       연산에 사용되는 데이터 저장             CPU가 일하는 방법   ","categories": ["c"],
        "tags": ["c","study"],
        "url": "/c/c1/",
        "teaser": null
      }]
